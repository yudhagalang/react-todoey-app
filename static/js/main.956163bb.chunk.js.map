{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","key","Header","isInitialMount","useRef","console","log","bgColor","Math","floor","random","current","document","getElementById","innerHTML","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoContainer","setTodos","show","setShow","axios","get","then","response","data","newTodo","uuidv4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.956163bb.chunk.js","sourcesContent":["// import React from \"react\";\r\n// class TodoItem extends React.Component {\r\n// \tcomponentWillUnmount() {\r\n// \t\talert(\"An Item about to be deleted!\");\r\n// \t};\r\n\t\r\n// \trender() {\r\n//     const completedStyle = {\r\n//       fontStyle: \"italic\",\r\n//       color: \"#d35e0f\",\r\n//       opacity: 0.4,\r\n//       textDecoration: \"line-through\"\r\n//     };\r\n//     const { completed, id, title } = this.props.todo;\r\n//     return (\r\n//       <li className=\"todo-item\">\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={completed}\r\n//           onChange={() => this.props.handleChangeProps(id)}\r\n//         />\r\n//         <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n//         <span style={completed ? completedStyle : null}>{title}</span>\r\n//       </li>\r\n//     );\r\n//   }\r\n// }\r\n// export default TodoItem;\r\nimport React, { useEffect } from \"react\"\r\n\r\nconst TodoItem = props => {\r\n\tconst completedStyle = {\r\n\t\tfontStyle: \"italic\",\r\n\t\tcolor: \"#d35e0f\",\r\n\t\topacity: 0.4,\r\n\t\ttextDecoration: \"line-through\"\r\n\t};\r\n\tconst { completed, id, title } = props.todo\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\talert(\"Item about to be deleted!\")\r\n\t\t}\r\n\t}, [])\r\n\treturn (\r\n\t\t<li className=\"todo-item\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tchecked={completed}\r\n\t\t\t\tonChange={() => props.handleChangeProps(id)}\r\n\t\t\t/>\r\n\t\t\t<button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n\t\t\t<span style={completed ? completedStyle : null}>{title}</span>\r\n\t\t</li>\r\n\t)\r\n}\r\nexport default TodoItem;","// import React from \"react\";\r\n// import TodoItem from \"./TodoItem\";\r\n// class TodosList extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         {this.props.todos.map(todo => (\r\n// \t\t\t\t\t<TodoItem\r\n// \t\t\t\t\t\tkey={todo.id}\r\n// \t\t\t\t\t\ttodo={todo}\r\n// \t\t\t\t\t\thandleChangeProps={this.props.handleChangeProps}\r\n// \t\t\t\t\t\tdeleteTodoProps={this.props.deleteTodoProps}\r\n// \t\t\t\t\t/>\r\n//         ))}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default TodosList;\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = props => {\r\n  return (\r\n    <div>\r\n      {props.todos.map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={props.handleChangeProps}\r\n          deleteTodoProps={props.deleteTodoProps}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default TodosList;\r\n","// import React from \"react\";\r\n// class Header extends React.Component {\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     var x = Math.floor(Math.random() * 256);\r\n//     var y = Math.floor(Math.random() * 256);\r\n//     var z = Math.floor(Math.random() * 256);\r\n//     var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n//     if (prevProps.headerSpan !== this.props.headerSpan) {\r\n//       document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n//       document.getElementById(\"inH1\").style.color = bgColor;\r\n//     }\r\n//   }\r\n//   render() {\r\n//     const headerStyle = {\r\n//       padding: \"20px 0\",\r\n//       lineHeight: \"2em\"\r\n//     };\r\n//     return (\r\n//       <header style={headerStyle}>\r\n//         <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n//           Simple Todoey App <span id=\"inH1\"></span>\r\n//         </h1>\r\n//         <p style={{ fontSize: \"19px\" }}>\r\n//           Please add to-doeys item(s) through the input field\r\n//         </p>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n// export default Header;\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst Header = props => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"2em\"\r\n  };\r\n  const isInitialMount = useRef(true);\r\n  console.log(isInitialMount);\r\n\r\n  useEffect(() => {\r\n    var x = Math.floor(Math.random() * 256);\r\n    var y = Math.floor(Math.random() * 256);\r\n    var z = Math.floor(Math.random() * 256);\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n      document.getElementById(\"inH1\").style.color = bgColor;\r\n    }\r\n  }, [props.headerSpan]);\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n        Simple Todoey App <span id=\"inH1\"></span>\r\n      </h1>\r\n      <p style={{ fontSize: \"19px\" }}>\r\n        Please add to-doeys item(s) through the input field\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","// import React, { Component } from \"react\";\r\n\r\n// class InputTodo extends Component {\r\n//   state = {\r\n//     title: \"\"\r\n//   };\r\n//   onChange = e => {\r\n//     this.setState({\r\n//       [e.target.name]: e.target.value\r\n//     });\r\n//   };\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     this.props.addTodoProps(this.state.title);\r\n//     this.setState({\r\n//       title: \"\"\r\n//     });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input-text\"\r\n//           placeholder=\"Add Todoey...\"\r\n//           value={this.state.title}\r\n//           name=\"title\"\r\n//           onChange={this.onChange}\r\n//         />\r\n//         <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n// export default InputTodo;\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst InputTodo = props => {\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n  });\r\n\r\n  const onChange = e => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.addTodoProps(inputText.title);\r\n    setInputText({\r\n      title: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add Todoey...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n    </form>\r\n  );\r\n};\r\nexport default InputTodo;\r\n","// import React from \"react\";\r\n// import TodosList from \"./TodosList\";\r\n// import Header from \"./Header\";\r\n// import InputTodo from \"./InputTodo\";\r\n// import axios from \"axios\";\r\n// class TodoContainer extends React.Component {\r\n//   state = {\r\n//     todos: [],\r\n//     show: false\r\n//   };\r\n//   handleChange = id => {\r\n//     this.setState({\r\n//       todos: this.state.todos.map(todo => {\r\n//         if (todo.id === id) {\r\n//           todo.completed = !todo.completed;\r\n//         }\r\n//         return todo;\r\n//       }),\r\n//       show: !this.state.show,\r\n//     });\r\n//   };\r\n//   delTodo = id => {\r\n//     axios\r\n//       .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n//       .then(response =>\r\n//         this.setState({\r\n//           todos:[\r\n//             ...this.state.todos.filter(todo => {\r\n//               return todo.id !== id\r\n//             }),\r\n//           ],\r\n//         })\r\n//       )\r\n//   };\r\n//   addTodoItem = title => {\r\n//     axios\r\n//       .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n//         title: title,\r\n//         completed: false\r\n//       })\r\n//       .then(response =>\r\n//         this.setState({\r\n//           todos: [...this.state.todos, response.data]\r\n//         })\r\n//       );\r\n//   };\r\n//   componentDidMount() {\r\n//     axios\r\n//       .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n//       .then(response => this.setState({ todos: response.data }));\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div className=\"container\">\r\n//         <Header headerSpan={this.state.show}/>\r\n//         <InputTodo addTodoProps={this.addTodoItem} />\r\n//         <TodosList\r\n//           todos={this.state.todos}\r\n//           handleChangeProps={this.handleChange}\r\n//           deleteTodoProps={this.delTodo}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default TodoContainer;\r\nimport React, { useState, useEffect } from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\n\r\nimport axios from \"axios\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst TodoContainer = props => {\r\n  const [todos, setTodos] = useState([])\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleChange = id => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n    setShow(!show)\r\n  }\r\n\r\n  const delTodo = id => {\r\n    setTodos([\r\n      ...todos.filter(todo => {\r\n        return todo.id !== id\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const addTodoItem = title => {\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title: title,\r\n      completed: false,\r\n    }\r\n    setTodos([...todos, newTodo])\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"test run\")\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\r\n      .then(response => setTodos(response.data))\r\n  }, [])\r\n  return (\r\n    <div className=\"container\">\r\n      <Header headerSpan={!show} />\r\n      <InputTodo addTodoProps={addTodoItem} />\r\n      <TodosList\r\n        todos={todos}\r\n        handleChangeProps={handleChange}\r\n        deleteTodoProps={delTodo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoContainer\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// Component File\r\nimport TodoContainer from \"./components/TodoContainer\";\r\nimport \"./App.css\"\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}